apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-doc-chat-app
  namespace: user-doc-chat
  labels:
    app: user-doc-chat
    component: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: user-doc-chat
      component: app
  template:
    metadata:
      labels:
        app: user-doc-chat
        component: app
    spec:
      containers:
        - name: app
          image: user-doc-chat:latest
          ports:
            - containerPort: 3000
          env:
            # Application configuration
            - name: NODE_ENV
              value: 'production'
            - name: PORT
              value: '3000'
            - name: LOG_LEVEL
              value: 'info'

            # Database configuration
            - name: DATABASE_URL
              value: 'postgresql://$(DB_USER):$(DB_PASSWORD)@postgres-service:5432/$(DB_NAME)?sslmode=require'
            - name: DB_HOST
              value: 'postgres-service'
            - name: DB_PORT
              value: '5432'
            - name: DB_NAME
              value: 'user_doc_chat_prod'
            - name: DB_USER
              value: 'postgres'
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: db-password

            # Redis configuration
            - name: REDIS_URL
              value: 'redis://:$(REDIS_PASSWORD)@redis-service:6379'
            - name: REDIS_HOST
              value: 'redis-service'
            - name: REDIS_PORT
              value: '6379'
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: redis-password

            # JWT configuration
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: jwt-secret
            - name: JWT_EXPIRES_IN
              value: '3600'

            # External API keys
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-keys
                  key: openai-api-key
            - name: ANTHROPIC_API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-keys
                  key: anthropic-api-key
            - name: SERP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-keys
                  key: serp-api-key
            - name: BING_SEARCH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: api-keys
                  key: bing-search-api-key
            - name: BING_SEARCH_ENDPOINT
              value: 'https://api.bing.microsoft.com/v7.0/search'

            # Storage configuration
            - name: MINIO_ENDPOINT
              value: 'minio-service'
            - name: MINIO_PORT
              value: '9000'
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: minio-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: minio-secret-key
            - name: MINIO_USE_SSL
              value: 'false'
            - name: S3_BUCKET
              value: 'user-doc-chat-prod'

            # Security configuration
            - name: CORS_ORIGIN
              value: 'https://your-production-domain.com'
            - name: RATE_LIMIT_WINDOW_MS
              value: '900000'
            - name: RATE_LIMIT_MAX_REQUESTS
              value: '100'

            # Monitoring
            - name: PROMETHEUS_PORT
              value: '9090'
            - name: GRAFANA_PORT
              value: '3001'

          resources:
            requests:
              memory: '512Mi'
              cpu: '250m'
            limits:
              memory: '1Gi'
              cpu: '500m'

          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: user-doc-chat
  labels:
    app: user-doc-chat
    component: app
spec:
  selector:
    app: user-doc-chat
    component: app
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: user-doc-chat
  labels:
    app: user-doc-chat
    component: postgres
spec:
  selector:
    app: user-doc-chat
    component: postgres
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: user-doc-chat
  labels:
    app: user-doc-chat
    component: redis
spec:
  selector:
    app: user-doc-chat
    component: redis
  ports:
    - port: 6379
      targetPort: 6379
      protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: user-doc-chat
  labels:
    app: user-doc-chat
    component: minio
spec:
  selector:
    app: user-doc-chat
    component: minio
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
    - port: 9001
      targetPort: 9001
      protocol: TCP
  type: ClusterIP
